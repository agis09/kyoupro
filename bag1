#include<bits/stdc++.h>

using namespace std;
using ll = long long;
using ld = long double;
#define rep(i,n) for(int i=0;i<(int)(n);i++)
#define reps(i,s,n) for(int i=(int)(s);i<(int)(n);i++)
const ll mod = ll(1e9) + 7;
const int INF = int(1e9);

int w, h;
int ww[31][31], wh[31][31];
bool m[31][31];
int solve() {
	queue <pair<pair<int, int>, int>>que;
	que.push({ {0,0},1 });
	while (que.size()) {
		int x = que.front().first.first;
		int y = que.front().first.second;
		int cnt = que.front().second;
		//cout << x << " " << y << endl;
		que.pop();
		if (x == w - 1 && y == h - 1)return cnt;
		if (x != 0) {
			if (wh[x - 1][y] != 1&&m[x-1][y]!=1) {
				que.push({ {x - 1,y},cnt + 1 });
				m[x - 1][y] = 1;
			}
		}
		if (x != w - 1) {
			if (wh[x][y] != 1 && m[x+1][y] != 1) {
				que.push({ {x + 1,y},cnt + 1 });
				m[x + 1][y] = 1;
			}
		}
		if (y != 0) {
			if (ww[x][y - 1] != 1 && m[x][y - 1] != 1) {
				que.push({ {x,y - 1},cnt + 1 });
				m[x][y - 1] = 1;
			}
		}
		if (y != h - 1) {
			if (ww[x][y] != 1 && m[x][y + 1] != 1) {
				que.push({ {x,y + 1},cnt + 1 });
				m[x][y + 1] = 1;
			}
		}
	}
	return 0;
}

int main() {
	cin.sync_with_stdio(false);
	while (1) {
		cin >> w >> h;
		if (w == 0)return 0;
		ww[31][31] = {}, wh[31][31] = {};
		m[31][31] = {};
		int cnth = 0;
		while (cnth < h) {
			rep(i, w-1) cin >> wh[i][cnth];
			if (cnth + 1 < h) {
				rep(i, w)cin >> ww[i][cnth];
			}
			cnth++;
		}
		cout << solve() << endl;

	}

	return 0;
}
