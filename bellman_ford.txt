

struct edge { int from, to, cost; };

edge es[MAX_E];

int d[MAX_V];
int V, E;


for (int i = 0; i < V; i++)d[i] = INF;

//s番目の頂点から各頂点への最短距離
void bellman_ford(int s) {
	d[s] = 0;
	int cnt = 0;
	while (cnt<V) {
		bool update = false;
		for (int i = 0; i < E; i++) {
			edge e = es[i];
			if (d[e.from] != INF&&d[e.to] > d[e.from] + e.cost) {
				d[e.to] = d[e.from] + e.cost;
				update = true;
			}
		}
		cnt++;
		if (!update)break;
	}
}
//２回b_fをする方がいい？
bool find_negative_loop() {
	memset(d, 0, sizeof(d));
	for (int i = 0; i < V; i++) {
		for (int j = 0; j < E; j++) {
			edge e = es[j];
			if (d[e.to] > d[e.from] + e.cost) {
				d[e.to] = d[e.from] + e.cost;
				if (i == V - 1)return true;
			}
		}
	}
	return false;
}
